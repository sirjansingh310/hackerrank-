import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
////////Dynamic Programming //////////
public class Solution {

    static int[] longestCommonSubsequence(int[] a, int[] b) {
        int dp[][]=new int[a.length+1][b.length+1];
        for(int i=0;i<=a.length;i++){
            for(int j=0;j<=b.length;j++){
                if(i==0 || j==0)
                    dp[i][j]=0;
                else{
                    if(a[i-1]==b[j-1])
                        dp[i][j]=dp[i-1][j-1]+1;
                    else
                        dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
                }
                
            }
        }
        /// print lcs
        int index=dp[a.length][b.length];
        int i=a.length,j=b.length;
        int lcs[]=new int[index];
        while(i>0 && j>0){
            if(a[i-1]==b[j-1]){
                lcs[index-1]=a[i-1];
                i--;
                j--;
                index--;
            }
            else{
                if(dp[i-1][j]>dp[i][j-1])
                    i--;
                else
                    j--;
            }
        }
        return lcs;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] a = new int[n];
        for(int a_i = 0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        int[] b = new int[m];
        for(int b_i = 0; b_i < m; b_i++){
            b[b_i] = in.nextInt();
        }
        int[] result = longestCommonSubsequence(a, b);
        for (int i = 0; i < result.length; i++) {
            System.out.print(result[i] + (i != result.length - 1 ? " " : ""));
        }
        System.out.println("");


        in.close();
    }
}
