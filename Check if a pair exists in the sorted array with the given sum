// check if sum of 2 numbers in an sorted equals to the given sum, O(nlog(n)), provided it is sorted
/// Binary Search
import java.util.*;
class mainclass{
    public static boolean binarySearch(int a[],int n, int sum)
    {
        for(int i=0;i<n;i++){
            int key=sum-a[i];
            int low=i+1;
            int high=n-1;
            while(low<=high){
               int mid=(low+high)/2;
               if(key>a[mid])
               low=mid+1;
               else if(key<a[mid])
               high=mid-1;
               else 
               return true;
            }
        }
        return false;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int sum=sc.nextInt(),n=sc.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        a[i]=sc.nextInt();
        System.out.println(binarySearch(a,n,sum));
    }
}
//////////////////////
// check if sum of 2 numbers in an sorted equals to the given sum, O(n), provided it is sorted
//Two pointer
import java.util.*;
class mainclass{
    public static boolean twoPointer(int a[],int n, int sum)
    {
        int left=0,right=n-1;
        while(left<right){
            if(a[left]+a[right]==sum)
            return true;
            else if(a[left]+a[right]<sum)
            left++;
            else 
            right--;
        }
        return false;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int sum=sc.nextInt(),n=sc.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        a[i]=sc.nextInt();
        System.out.println(twoPointer(a,n,sum));
    }
}
